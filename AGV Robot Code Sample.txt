#pragma config(Sensor, in1,    rightLinefollower, sensorLineFollower)
#pragma config(Sensor, in2,    leftLinefollower, sensorLineFollower)
#pragma config(Sensor, dgtl1,  eStop,          sensorTouch)
#pragma config(Sensor, dgtl2,  startSwitch,    sensorTouch)
#pragma config(Sensor, dgtl3,  Sonar,          sensorSONAR_inch)
#pragma config(Sensor, dgtl12, LED,            sensorLEDtoVCC)
#pragma config(Motor,  port1,           rightFlashlight, tmotorVexFlashlight, openLoop, reversed)
#pragma config(Motor,  port2,           rightMotor,    tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port3,           leftMotor,     tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port10,          leftFlashlight, tmotorVexFlashlight, openLoop, reversed)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

/*
  Project Title: AGV Project
  Team Members:  Nathan Renner, Mason Rolman.
  Date: 12/9/2020
  Section: AGV Project


  Task Description:
An automated robot will use sensors with motors to follow a  black line. A start button will initiate the robot. After, It should be able to detect if it is going of the line,
and correct itself with its motors. The robot should be able to stop at 3 intersections for an alloted time, resuming after.
It should stop at the last intersection by counting the intersections.. Flashlights will be used to help the line followers. An e stop button will also be used.


  Pseudocode:
The E stop command is stated above task main that will stop all task if the e stop button is pressed. Another task is stated that will stop the robot if the intersection count reaches 3.
When the program starts, an LED will turn on, and two guide flashlights. The task are started as well. The program will wait for the start switch to be pressed. After it is pressed,
In a loop, The line following program will run. The program will check that 2 linefollower are reading grey. If true, it will go forward. If false, it will run an alternate code.
In the alternate(else) statment, line followers will look for black lines. If the right follower detects black,the right motor will reverse. If the left follower detects black, the left motor will reverse.
If both followers detect black, the motors will stop for 5 seconds, and it will add 1 to the intersection count variable. When 3 intersections are counted, the program will stop.
*/
task e_stop()//stating the task
{
  while(true)//while its true
  {
     if(SensorValue(eStop) == 1)//run if sensor value equals 1
    {
        stopAllTasks();      // ends the program and all tasks including task main.
    }
        wait1Msec(10);  	// prevents the current task from using majority of available CPU capacity
    }
}
int interSectionCount; // States the Intersection variable
task lineStop() // States the Intersection stop task
{
	while(true) // Loop
	{
		if (interSectionCount == 3)  // If 3 intersection are counted..
		{
			stopAllTasks(); // Stops everything
		}
		  wait1Msec(10); // Saves CPU usage
	}
}


task main()
{
startTask (e_stop); // Starts the  task
startTask (lineStop); // Starts the Line stop task

turnLEDOn(LED); // Turns the LED on

	while(1==1) // Loop

		{	turnFlashlightOn(rightFlashlight,  25); // Turns the right flashlight on
		turnFlashlightOn(leftFlashlight, 25); // Turns the left Flashlight on
 		untilTouch(startSwitch); // The main code will run after the switch is pressed.


			while  (true)// The loop will run until 3 intersections are counted.
			{


			if (SensorValue[rightLinefollower] <= 2735 && SensorValue[leftLinefollower] <= 2790) // If the line followers detect grey (less than a certain value)
	  		{
	  			startMotor(rightMotor, 35); //motor runs
	  			startMotor(leftMotor, 35); //motor runs
			  }

			  else						// If the followers detect black...
				{

						if (SensorValue(rightLinefollower) >= 2840) // If the right follower detects black...
							{
								startMotor(leftMotor, 35);
							  startMotor(rightMotor,-	35); // Reverses the right motor

							}
						if (SensorValue(leftLinefollower) >= 2900) // If the left line follower detects black...
							{
								startMotor(rightMotor, 35);
								startMotor(leftMotor,-35); // Reverses the left motor
							}
						if (SensorValue[rightLinefollower] >= 2840 && SensorValue[leftLinefollower] >= 2900) //If both line followers read black...
							{
								stopMotor(leftMotor); // Stops the left motor
								stopMotor(rightMotor); // Stops the right motor
								interSectionCount = interSectionCount + 1; // Adds 1 count to the intersection count
								wait(5); // waits for 5 seconds
								startMotor(leftMotor, 35); // Starts the left motor
								startMotor(rightMotor, 35); // Starts the right motor
								wait(1); // waits one second so it has time to get pass the intersection
							}


					}
			}





		}







}